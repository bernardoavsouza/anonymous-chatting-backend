name: Continuous Delivery

on:
  workflow_run:
    workflows: 'Continuous Integration'
    types:
      - completed
    branches:
      - production
env:
  IMAGE_NAME: 'anonymous-chatting'

jobs:
  build:
    name: Build Image
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

      - name: Build, tag, and push image to Artifact Registry
        id: build-and-push-image
        run: |
          docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:latest .
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - id: 'deploy'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ env.IMAGE_NAME }}
          image: '${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:latest'
          flags: |
            --port ${{ secrets.APP_PORT }}
            --allow-unauthenticated
            --min 0
            --max-instances 1
          env_vars: |
            APP_PORT=${{ secrets.APP_PORT }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}
            REDIS_USERNAME=${{ secrets.REDIS_USERNAME }}
            REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
